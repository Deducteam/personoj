name: proof_tools

on: [push]

jobs:
  tools:
    strategy:
      fail-fast: false
      matrix:
        ocaml-compiler:
          - 4.11.x
          - 4.13.x

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        path: personoj

    - name: Use ocaml
      uses: ocaml/setup-ocaml@v2
      with:
        ocaml-compiler: ${{ matrix.ocaml-compiler }}

    - name: Pin lambdapi
      run: opam pin add 'git://github.com/gabrielhdt/lambdapi#refiner'

    - name: appaxiom
      run: |
        cd "${GITHUB_WORKSPACE}"/personoj/proofs/appaxiom || exit 1
        opam install . --deps-only --yes
        opam exec -- dune build
        opam exec -- dune runtest

    - name: qfo
      run: |
        cd "${GITHUB_WORKSPACE}"/personoj/proofs/qfo || exit 1
        opam install . --deps-only --yes
        opam exec -- dune build
        opam exec -- dune runtest

    - name: autosolve
      run: |
        cd "${GITHUB_WORKSPACE}"/personoj/proofs/autosolve || exit 1
        opam install cmdliner --yes
        opam exec -- dune build
        opam exec -- dune runtest

    - name: toolbox
      run: |
        cd "${GITHUB_WORKSPACE}"/personoj/proofs/psnj_toolbox || exit 1
        opam install . --deps-only --yes
        opam exec -- dune build
        opam exe -- dune runtest

  pipeline:
    strategy:
      fail-fast: false
      matrix:
        ocaml-compiler:
          - 4.13.x
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        path: personoj

    - name: ocaml
      uses: ocaml/setup-ocaml@v2
      with:
        ocaml-compiler: ${{ matrix.ocaml-compiler }}

    - name: pin lambdapi
      run: opam pin add 'git://github.com/gabrielhdt/lambdapi#refiner'

    - name: install bmake
      run: sudo apt-get install bmake asciidoc --yes

    - name: install tools
      run: |
        opam install yojson angstrom feather cmdliner
        cd "${GITHUB_WORKSPACE}"/personoj/proofs || exit 1
        (cd appaxiom && bmake && sudo bmake install)
        (cd qfo && bmake && sudo bmake install)
        (cd split && bmake && sudo bmake install)
        (cd pipeline && bmake && sudo bmake install)
        (cd autosolve && bmake && sudo bmake install)
        (cd psnj_toolbox && make && sudo make install)

    - name: launch pipeline
      run: |
        cd "${GITHUB_WORKSPACE}"/personoj/proofs/pipeline || exit 1
        bmake tests

