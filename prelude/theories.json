{
  "source": "prelude",
  "theories": [
    {
      "name": "booleans",
      "disabled": true,
      "comment": "Handled by the encoding"
    },
    {
      "name": "equalities",
      "disabled": true,
      "comment": "Handled by the encoding"
    },
    {
      "name": "notequal",
      "disabled": true,
      "comment": "Handled by the encoding"
    },
    {
      "name": "if_def",
      "disabled": true,
      "comment": "Handled by the encoding"
    },
    {
      "name": "boolean_props",
      "disabled": true,
      "comment": "Handled by the encoding"
    },
    {
      "name": "xor_def"
    },
    {
      "name": "quantifier_props"
    },
    {
      "name": "defined_types"
    },
    {
      "name": "exists1"
    },
    {
      "name": "equality_props"
    },
    {
      "name": "if_props"
    },
    {
      "name": "functions"
    },
    {
      "name": "functions_alt"
    },
    {
      "name": "transpose"
    },
    {
      "name": "restrict",
      "disabled": true,
      "comment": "This theory is handled by the module personoj.restrict of the encoding"
    },
    {
      "name": "restrict_props"
    },
    {
      "name": "extend",
      "disabled": true,
      "comment": "This theory is handled by the module personoj.restrict of the encoding"
    },
    {
      "name": "extend_bool",
      "disabled": true
    },
    {
      "name": "extend_props"
    },
    {
      "name": "extend_func_props"
    },
    {
      "name": "K_conversion"
    },
    {
      "name": "K_props",
      "disabled": true,
      "comment": "Problems with TYPE FROM, S_pred and alike. Consists only of judgements"
    },
    {
      "name": "identity"
    },
    {
      "name": "identity_props",
      "disabled": true,
      "comment": "Same as K_props"
    },
    {
      "name": "relations"
    },
    {
      "name": "orders"
    },
    {
      "name": "orders_alt"
    },
    {
      "name": "restrict_order_props",
      "comment": "Only judgements"
    },
    {
      "name": "extend_order_props",
      "comment": "Only judgements"
    },
    {
      "name": "wf_induction"
    },
    {
      "name": "measure_induction"
    },
    {
      "name": "epsilons"
    },
    {
      "name": "decl_params",
      "disabled": true,
      "comment": "Strange syntax nonempty_ax[T:TYPE]"
    },
    {
      "name": "sets"
    },
    {
      "name": "sets_lemmas"
    },
    {
      "name": "function_inverse_def"
    },
    {
      "name": "function_inverse"
    },
    {
      "name": "function_inverse_alt",
      "comment": "\"assuming\" section not taken into account"
    },
    {
      "name": "function_image"
    },
    {
      "name": "function_props"
    },
    {
      "name": "function_props_alt"
    },
    {
      "name": "function_props2"
    },
    {
      "name": "relation_defs"
    },
    {
      "name": "relation_props"
    },
    {
      "name": "relation_props2"
    },
    {
      "name": "relation_converse_props"
    },
    {
      "name": "indexed_sets"
    },
    {
      "name": "operator_defs"
    },
    {
      "name": "numbers"
    },
    {
      "name": "number_fields"
    },
    {
      "name": "reals"
    },
    {
      "name": "real_axioms"
    },
    {
      "name": "bounded_real_defs"
    },
    {
      "name": "bounded_real_defs_alt"
    },
    {
      "name": "real_types"
    },
    {
      "name": "rationals"
    },
    {
      "name": "integers"
    },
    {
      "name": "naturalnumbers"
    },
    {
      "name": "min_nat"
    },
    {
      "name": "real_defs"
    },
    {
      "name": "real_props"
    },
    {
      "name": "extra_real_props"
    },
    {
      "name": "extra_tegies"
    },
    {
      "name": "rational_props"
    },
    {
      "name": "integer_props"
    },
    {
      "name": "floor_ceil",
      "disabled": true,
      "comment": "works but long to typecheck"
    },
    {
      "name": "exponentiation",
      "disabled": true,
      "comment": "Contains a recursive function definition and subtyping on dependent tuples."
    },
    {
      "name": "euclidean_division"
    },
    {
      "name": "divides",
      "disabled": false,
      "comment": "last formula commented because of unification failure"
    },
    {
      "name": "modulo_arithmetic",
      "disabled": true,
      "comment": "works but long to typecheck"
    },
    {
      "name": "subrange_inductions",
      "disabled": true,
      "comment": "FIXME: Ill formed application (term is not typed in PVS)"
    },
    {
      "name": "bounded_int_inductions"
    },
    {
      "name": "bounded_nat_inductions"
    },
    {
      "name": "subrange_type",
      "disabled": false,
      "comment": "Overloading on \"subrange\" with theory parameters"
    },
    {
      "name": "int_types",
      "disabled": false,
      "comment": "Overloading on \"upfrom\" and \"above\" with theory parameters"
    },
    {
      "name": "nat_types",
      "disabled": false,
      "comment": "Overloading on \"upto\" and \"below\" with theory parameters"
    },
    {
      "name": "nat_fun_props"
    },
    {
      "name": "finite_sets",
      "disabled": false,
      "comment": " Depends on nat_types"
    },
    {
      "name": "restrict_set_props",
      "disabled": true,
      "comment": " Depends on finite_sets"
    },
    {
      "name": "extend_set_props",
      "disabled": true,
      "comment": " Depends on finite_sets"
    },
    {
      "name": "function_image_aux",
      "disabled": false,
      "comment": " Depends on finite_sets"
    },
    {
      "name": "function_iterate"
    },
    {
      "name": "sequences"
    },
    {
      "name": "seq_functions"
    },
    {
      "name": "finite_sequences",
      "disabled": true,
      "comment": "Use dependent records"
    },
    {
      "name": "more_finseq",
      "disabled": true,
      "comment": "Depends on finite_sequences"
    },
    {
      "name": "ordstruct",
      "disabled": true,
      "comment": "Is a Datatype"
    },
    {
      "name": "ordinals",
      "disabled": true,
      "comment": "Recursive function"
    },
    {
      "name": "lex2",
      "disabled": true,
      "comment": "Depends on ordinals"
    },
    {
      "name": "lex3",
      "disabled": true,
      "comment": "Depends on ordinals"
    },
    {
      "name": "lex4",
      "disabled": true,
      "comment": "Depends on ordinals"
    },
    {
      "name": "list",
      "disabled": true,
      "comment": "Is a datatype"
    },
    {
      "name": "list_props",
      "disabled": true,
      "comment": "Recursive function"
    },
    {
      "name": "map_props",
      "disabled": true,
      "comment": "Depends on list"
    },
    {
      "name": "more_map_props",
      "disabled": true,
      "comment": "Must depend on map_props or list"
    },
    {
      "name": "filters",
      "disabled": true,
      "comment": "Recursive functions"
    },
    {
      "name": "list2finseq",
      "disabled": true,
      "comment": "Depends on list"
    },
    {
      "name": "list2set",
      "disabled": true,
      "comment": "Recursive functions, depends on list"
    },
    {
      "name": "disjointness",
      "disabled": true,
      "comment": "Recursive functions"
    },
    {
      "name": "character",
      "disabled": true,
      "comment": "Is datatype"
    },
    {
      "name": "strings",
      "disabled": true,
      "comment": "Depends on finite_sequence"
    },
    {
      "name": "lift",
      "disabled": true,
      "comment": "Is a datatype"
    },
    {
      "name": "union",
      "disabled": true,
      "comment": "Datatype"
    },
    {
      "name": "mucalculus"
    },
    {
      "name": "ctlops",
      "disabled": true,
      "comment": "Seem to mess with K_conversion"
    },
    {
      "name": "fairctlops",
      "disabled": true,
      "comment": "Mess with K_conversion"
    },
    {
      "name": "Fairctlops",
      "disabled": true,
      "comment": "Recursive functions"
    },
    {
      "name": "bit",
      "disabled": true,
      "comment": "FIXME: subtyping failure"
    },
    {
      "name": "bv",
      "disabled": true,
      "comment": "Depedns on bit"
    },
    {
      "name": "exp2",
      "disabled": true,
      "comment": "Recursive functions"
    },
    {
      "name": "bv_concat_def",
      "disabled": true,
      "comment": "depends on bit"
    },
    {
      "name": "bv_bitwise",
      "disabled": true,
      "comment": "depends on bit"
    },
    {
      "name": "bv_nat",
      "disabled": true,
      "comment": "Recursive"
    },
    {
      "name": "empty_bv",
      "disabled": true,
      "comment": "Depends on bit"
    },
    {
      "name": "bv_caret",
      "disabled": true,
      "comment": "Dependent tuple (I think)"
    },
    {
      "name": "mod",
      "disabled": true,
      "comment": "works but very long to typecheck"
    },
    {
      "name": "bv_arith_nat_defs",
      "disabled": true,
      "comment": "May depend on bv_caret"
    },
    {
      "name": "bv_int_defs",
      "disabled": true,
      "comment": "May depend on bv_caret"
    },
    {
      "name": "bv_arithmetic_defs",
      "disabled": true,
      "comment": "Recursive functions"
    },
    {
      "name": "bv_extend_defs",
      "disabled": true,
      "comment": "May depend on bv_caret"
    },
    {
      "name": "integertypes",
      "disabled": true,
      "comment": "Fails for some reason"
    },
    {
      "name": "infinite_sets_def",
      "disabled": true,
      "comment": "Macros"
    },
    {
      "name": "finite_sets_of_sets",
      "disabled": true,
      "comment": "Recursive functions"
    },
    {
      "name": "EquivalenceClosure"
    },
    {
      "name": "QuotientDefinition"
    },
    {
      "name": "KernelDefinition"
    },
    {
      "name": "QuotientKernelProperties"
    },
    {
      "name": "QuotientSubDefinition",
      "disabled": true,
      "comment": "Uses X1_pred on TYPE FROM theory parameter"
    },
    {
      "name": "QuotientExtensionProperties",
      "disabled": true,
      "comment": "Uses X1_pred predicate on TYPE FROM theory parameter"
    },
    {
      "name": "QuotientDistributive",
      "disabled": true,
      "comment": "Depends on QuotienExtensionProperties"
    },
    {
      "name": "QuotientIteration",
      "disabled": true,
      "comment": "Same as QuotientDistributive"
    },
    {
      "name": "PartialFunctionDefinitions",
      "disabled": true,
      "comment": "Contains a record"
    },
    {
      "name": "PartialFunctionComposition",
      "disabled": true,
      "comment": "Depends on previous thy"
    }
  ]
}
