Set : Type.
Prop : Type.
injective El : (Set -> Type).
injective Prf : (Prop -> Type).
prop : Set.
[] El prop --> Prop.
{|âˆ€|} : (x : Set -> (((El x) -> Prop) -> Prop)).
[v0_X, v1_P] Prf ({|âˆ€|} v0_X v1_P) --> (x : (El v0_X) -> (Prf (v1_P x))).
{|â‡’|} : (p : Prop -> (((Prf p) -> Prop) -> Prop)).
[v0_P, v1_Q] Prf ({|â‡’|} v0_P v1_Q) --> (h : (Prf v0_P) -> (Prf (v1_Q h))).
arrd : (x : Set -> (((El x) -> Set) -> Set)).
[v0_X, v1_T] El (arrd v0_X v1_T) --> (x : (El v0_X) -> (El (v1_T x))).
arr : (Set -> (Set -> Set)).
[v0_X, v1_Y] El (arr v0_X v1_Y) --> ((El v0_X) -> (El v1_Y)).
def {|~>|} : (Set -> (Set -> Set)).
[] {|~>|} --> arr.
